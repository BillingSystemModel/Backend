version: '3.9'
services:
  postgresql:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRESQL_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRES_DB=${POSTGRESQL_DB}
    ports:
      - "${POSTGRESQL_PORT}:${POSTGRESQL_PORT}"
    volumes:
      - ./postgres-volume:/var/lib/postgresql/volumes
    healthcheck:
      test: "pg_isready -d ${POSTGRESQL_DB} -U ${POSTGRESQL_USER}"
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - billing-system-network
    restart: always

  activemq-artemis:
    image: apache/activemq-artemis:latest-alpine
    environment:
      - ARTEMIS_USER=${AMQ_ARTEMIS_USER}
      - ARTEMIS_PASSWORD=${AMQ_ARTEMIS_PASSWORD}
    ports:
      - "8161:8161"
      - "${AMQ_ARTEMIS_PORT}:61616"
    healthcheck:
      test: "curl --silent --fail http://localhost:8161/console || exit 1"
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - billing-system-network
    restart: always

  config-server:
    build:
      context: ConfigServer
      dockerfile: Dockerfile
    ports:
      - "${CONFIG_SERVER_PORT}:${CONFIG_SERVER_PORT}"
    env_file:
      - .env
    networks:
      - billing-system-network
    restart: always

  data-gen:
    build:
      context: DataGen
      dockerfile: Dockerfile
    ports:
      - "${DATA_GEN_PORT}:${DATA_GEN_PORT}"
    env_file:
      - .env
    networks:
      - billing-system-network
    restart: always
    volumes:
      - ./files:/home/files

  brt:
    build:
      context: BRT
      dockerfile: Dockerfile
    ports:
      - "${BRT_PORT}:${BRT_PORT}"
    env_file:
      - .env
    networks:
      - billing-system-network
    restart: always
    volumes:
      - ./files:/home/files

  hrs:
    build:
      context: HRS
      dockerfile: Dockerfile
    ports:
      - "${HRS_PORT}:${HRS_PORT}"
    env_file:
      - .env
    networks:
      - billing-system-network
    restart: always
    volumes:
      - ./files:/home/files

  crm:
    build:
      context: CRM
      dockerfile: Dockerfile
    ports:
      - "${CRM_PORT}:${CRM_PORT}"
    env_file:
      - .env
    networks:
      - billing-system-network
    restart: always

networks:
  billing-system-network:
    driver: bridge
